#import "ProductDetailVC.h"
#import "UIImage+LXX.h"
#import "CrossLineLable.h"
#import "TitleBar.h"
#import "FileHelpers.h"
#import "PropertyCell.h"
#import "InsetsLabel.h"
#import "MayYouLikeView.h"
#import "ProductEvaluationVC.h"
#import "UrlParser.h"
#import "ChoosePackageVC.h"
#import "ChooseNumVC.h"
#import "WebProductDetailVC.h"
#import "ZSYCommonPickerView.h"
#import "DataDictionary_back_cart_item.h"
#import "NumberManager.h"

#define PHONE_WIDTH [AppDelegate sharePhoneWidth]    //手机宽度
#define PHONE_HEIGHT [AppDelegate sharePhoneHeight]  //手机高度
#define NAVBAR_HEIGHT 64                             //导航栏高度
#define PRODUCT_IMAGE_HEIGHT 190                     //商品图片高度
#define PRODUCT_DESC_HEIGHT 58                       //商品描述高度
#define PRICE_CONTENTVIEW_HEIGHT 60                  //价格标签容器视图高度
#define BTN_CONTENTVIEW_HEIGHT 50                    //按钮容器高度
#define PRICELABEL_HEIGHT 20                         //价格标签高度
enum DetailType
{
    DetailTypeContract = 1001,
    DetailTypeCard = 1002,
    DetailTypeNet = 1011,
    DetailTypePhone = 1004,
    DetailTypeParts = 1005
};

@interface ProductDetailVC ()<UITableViewDataSource,UITableViewDelegate,TitleBarDelegate,HttpBackDelegate,MayYouLikeViewDelegate>

@property(nonatomic,strong) UIImageView    *productImgView;        //产品图片
@property(nonatomic,strong) UILabel        *descLable;             //产品描述
@property(nonatomic,strong) UIView         *priceShowView;         //价格显示视图
@property(nonatomic,strong) UILabel        *discountPrice;         //原价
@property(nonatomic,strong) CrossLineLable *sailPriceLable;        //现价
@property(nonatomic,strong) UIImageView    *ifHaveView;            //存货数量标签
@property(nonatomic,strong) UITableView    *dataTable;             //表单
@property(nonatomic,strong) UIScrollView   *mayYouLikeContentView; //猜你喜欢视图
@property(nonatomic,copy)   NSString       *allDetailUrl;          //图文详情URL
@property(nonatomic,weak)   InsetsLabel    *mayYouLikeLabel;       //猜你喜欢文字标签
@property(nonatomic,weak)   UIButton       *checkDetailBtn;        //点击查看详情按钮
@property(nonatomic,strong) NSMutableArray *skuList;
//@property(nonatomic,strong) NSMutableArray *selectedPropetryList;
@property(nonatomic,strong) NSMutableDictionary *selectedPropetryDict;

@end

static NSString *identifier = @"CustomCell";

@implementation ProductDetailVC
{
    ChooseNumVC *chooseNumVc;
    NSMutableArray      *gifts;                //赠品
    NSMutableArray      *propertyDictList;         //商品属性列表
    NSMutableArray      *evaluateInfo;         //商品属性
    BOOL                isShow;                //赠品栏是否收缩
    UIView              *headerView;           //section视图
    UIImageView         *headImgView;          //section收缩箭头
    NSMutableDictionary *requestDict;          //请求字典
    UIButton            *submitBtn;            //提交按钮
    int                 moduleId;              //moduleId
    NSMutableArray      *packageTypeList;       //号卡类型列表
}

- (void)loadView
{
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, PHONE_WIDTH, PHONE_HEIGHT)];
    self.view = view;
    [self layoutViews];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    submitBtn.enabled = NO;
    isShow = YES;
    bussineDataService *bus = [bussineDataService sharedDataService];
    bus.target = self;
    requestDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:self.params[@"productId"],@"id",self.params[@"developId"],@"developerId", nil];
    [bus getProductDetail:requestDict];
}


- (void)layoutViews
{
    TitleBar *titleBar = [[TitleBar alloc] initWithFramShowHome:YES ShowSearch:NO TitlePos:middle_position];
    titleBar.title = @"商品详情";
    titleBar.target = self;
    if (IOS7)
    titleBar.frame = CGRectMake(0, 20, PHONE_WIDTH, 44);
    [self.view addSubview:titleBar];
    
    //滚动视图
    UIScrollView *scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, NAVBAR_HEIGHT, PHONE_WIDTH,PHONE_HEIGHT - NAVBAR_HEIGHT)];
    scrollView.contentSize = CGSizeMake(PHONE_WIDTH, 870);
    scrollView.backgroundColor = [ComponentsFactory createColorByHex:@"#f0eff4"];
    scrollView.showsVerticalScrollIndicator = NO;
    
    //商品图片
    _productImgView = [[UIImageView alloc] initWithFrame:CGRectMake(0, 0, PHONE_WIDTH, PRODUCT_IMAGE_HEIGHT)];
    [scrollView addSubview:_productImgView];
    
    //商品描述
    _descLable = [[UILabel alloc] initWithFrame:CGRectMake(10, PRODUCT_IMAGE_HEIGHT,PHONE_WIDTH - 20, PRODUCT_DESC_HEIGHT)];
    _descLable.numberOfLines = 0;
    _descLable.adjustsFontSizeToFitWidth = YES;
    _descLable.backgroundColor = [UIColor clearColor];
    [scrollView addSubview:_descLable];
    
    //价格信息视图
    UIView *priceShowView = [[UIView alloc] initWithFrame:CGRectMake(0, PRODUCT_IMAGE_HEIGHT + PRODUCT_DESC_HEIGHT, PHONE_WIDTH, PRICE_CONTENTVIEW_HEIGHT)];
    priceShowView.backgroundColor = [UIColor whiteColor];
    self.priceShowView = priceShowView;
    [scrollView addSubview:priceShowView];
    
    //现价
    _discountPrice = [[UILabel alloc] initWithFrame:CGRectMake(10, 10, 160, PRICELABEL_HEIGHT)];
    _discountPrice.font = [UIFont systemFontOfSize:16.0f];
    _discountPrice.textColor = [ComponentsFactory createColorByHex:@"#d73902"];
    
    //原价
    _sailPriceLable = [[CrossLineLable alloc] initWithFrame:CGRectMake(10, 30, 180, PRICELABEL_HEIGHT)];
    _sailPriceLable.font = [UIFont systemFontOfSize:14.0f];
    _sailPriceLable.textColor = [UIColor lightGrayColor];
    
    //是否有货
    _ifHaveView = [[UIImageView alloc] initWithFrame:CGRectMake(175, 13, 27, 13)];
    _ifHaveView.image = [UIImage imageNamed:@"lable_content_sku_y"];
    
    //分割线
    UIImageView *lineView = [[UIImageView alloc] initWithFrame:CGRectMake(240, 5, 1, 50)];
    lineView.image = [UIImage imageNamed:@"list_nav_line_s"];
    
    //分享按钮
    UIButton *shareBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [shareBtn setFrame:CGRectMake(237, 0, 83, 60)];
    [shareBtn setImage:[UIImage imageNamed:@"btn_share_n"] forState:UIControlStateNormal];
    [shareBtn setImage:[UIImage imageNamed:@"btn_share_p"] forState:UIControlStateHighlighted];
    shareBtn.imageEdgeInsets = UIEdgeInsetsMake(-10, 15, 10, -15);
    [shareBtn.titleLabel setFont:[UIFont systemFontOfSize:14]];
    [shareBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [shareBtn setTitleColor:[UIColor orangeColor] forState:UIControlStateHighlighted];
    [shareBtn setTitle:@"分享" forState:UIControlStateNormal];
    shareBtn.titleEdgeInsets = UIEdgeInsetsMake(13, -18, -20, 0);
    
    //添加事件监听
    [shareBtn addTarget:self action:@selector(share:) forControlEvents:UIControlEventTouchUpInside];
    
    //创建表格
    _dataTable = [[UITableView alloc] initWithFrame:CGRectMake(0, 315, PHONE_WIDTH,370) style:UITableViewStylePlain];
    _dataTable.delegate = self;
    _dataTable.dataSource = self;
    _dataTable.scrollEnabled = NO;
    _dataTable.backgroundColor = [UIColor clearColor];
    _dataTable.separatorStyle = UITableViewCellSeparatorStyleNone;
    [scrollView addSubview:_dataTable];
    
    //猜你喜欢视图
    UIView *mayYouLikeView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, PHONE_WIDTH, 185)];
    mayYouLikeView.backgroundColor = [UIColor clearColor];
    
    InsetsLabel *lable = [[InsetsLabel alloc] initWithFrame:CGRectMake(0, 10, PHONE_WIDTH, 20) andInsets:UIEdgeInsetsMake(0, 10, 0, 0)];
    self.mayYouLikeLabel = lable;
    lable.text = @"也许您还喜欢:";
    lable.font = [UIFont systemFontOfSize:14.0f];
    lable.backgroundColor = [UIColor clearColor];
    [mayYouLikeView addSubview:lable];
    
    _mayYouLikeContentView = [[UIScrollView alloc] init];
    _mayYouLikeContentView.backgroundColor = [UIColor whiteColor];
    _mayYouLikeContentView.showsVerticalScrollIndicator = NO;
    _mayYouLikeContentView.frame = CGRectMake(0, 35, PHONE_WIDTH, 100);
    [mayYouLikeView addSubview:_mayYouLikeContentView];
    _dataTable.tableFooterView = mayYouLikeView;
    
    UIButton *checkDetailBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    self.checkDetailBtn = checkDetailBtn;
    [checkDetailBtn setBackgroundColor:[UIColor whiteColor]];
    [checkDetailBtn.titleLabel setFont:[UIFont systemFontOfSize:14.0f]];
    [checkDetailBtn setTitle:@"点击查看商品详情" forState:UIControlStateNormal];
    [checkDetailBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [checkDetailBtn setFrame:CGRectMake(0, 145, PHONE_WIDTH, 30)];
    [checkDetailBtn addTarget:self action:@selector(checkProductDetail) forControlEvents:UIControlEventTouchUpInside];
    [mayYouLikeView addSubview:checkDetailBtn];
    
    [priceShowView addSubview:shareBtn];
    [priceShowView addSubview:lineView];
    [priceShowView addSubview:_ifHaveView];
    [priceShowView addSubview:_sailPriceLable];
    [priceShowView addSubview:_discountPrice];
    
    [self.view addSubview:scrollView];
    
    
    //按钮界面
    UIView *btnView = [[UIView alloc] initWithFrame:CGRectMake(0, PHONE_HEIGHT - BTN_CONTENTVIEW_HEIGHT, PHONE_WIDTH,BTN_CONTENTVIEW_HEIGHT)];
    btnView.backgroundColor = [UIColor whiteColor];
    
    submitBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [submitBtn setTitle:@"立即购买" forState:UIControlStateNormal];
    submitBtn.frame = CGRectMake(7, 8, 195 + 111, 33);
    [submitBtn setBackgroundImage:[UIImage resizedImage:@"bnt_content_primary_n.png"] forState:UIControlStateNormal];
    [submitBtn addTarget:self action:@selector(BuyProduct) forControlEvents:UIControlEventTouchUpInside];
    [btnView addSubview:submitBtn];
    
    [self.view addSubview:btnView];
}

//- (NSMutableArray *)selectedPropetryList
//{
//    if (_selectedPropetryList == nil)
//    {
//        _selectedPropetryList = [NSMutableArray array];
//    }
//    return _selectedPropetryList;
//}

- (NSMutableDictionary *)selectedPropetryDict
{
    if (_selectedPropetryDict == nil)
    {
        _selectedPropetryDict = [NSMutableDictionary dictionary];
    }
    return _selectedPropetryDict;
}

#pragma mark - UITableViewDataSource
-(NSInteger)numberOfSectionsInTableView:(UITableView *)tableView
{
    return 3;
}
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    if (section == 0)
    {
        if (isShow)
        return gifts.count;
        else
        return 0;
    }
    else if(section == 1)
    return propertyDictList.count;
    else if(section == 2)
    return evaluateInfo.count;
    return 0;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    PropertyCell *cell = (PropertyCell *)[tableView dequeueReusableCellWithIdentifier:identifier];
    if (cell == nil)
    {
        cell = [[PropertyCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:identifier];
    }
    if (indexPath.section == 0)
    {
        cell.textLabel.text = gifts[indexPath.row][@"giftDetail"];
        cell.selectionStyle = UITableViewCellSelectionStyleNone;
    }
    else if(indexPath.section == 1)
    {
        cell.textLabel.text = propertyDictList[indexPath.row][@"propertyName"];
        cell.detailTextLabel.text = @"未选择";
        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    else
    {
        cell.textLabel.text = @"商品评价";
        NSDictionary *dict = evaluateInfo[0];
        int evaluateCount = [dict[@"evaluateCount"] intValue];
        if (evaluateCount >0)
        {
            int evaluateNiceCount = [dict[@"evaluateNiceCount"] intValue];
            int nice = (int)((float)evaluateNiceCount/evaluateCount*100);
            cell.detailTextLabel.text = [NSString stringWithFormat:@"%d人评价,好评率%d%%",evaluateCount,nice];
        }
        else
        {
            cell.detailTextLabel.text = @"0人评价,好评率0%";
        }
        cell.detailTextLabel.textColor = [UIColor blueColor];
        cell.selectionStyle = UITableViewCellSelectionStyleDefault;
        cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
    }
    return cell;
}

#pragma mark - UITableViewDelegate
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 44.0;
}

//选中单元格时调用
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    
    //属性section
    if (indexPath.section == 1)
    {
        NSString *propertyName = propertyDictList[indexPath.row][@"propertyName"];
        if ([propertyName isEqualToString:@"合约"])
        {
            NSArray *selectedPropetryArray = [self.selectedPropetryDict allValues];
            if (selectedPropetryArray.count == 2)
            {
                NSString *skuId = [self makeSureSkuIdByPropetrys:selectedPropetryArray];
                if ([skuId isEqualToString:@""])
                {
                    [self ShowProgressHUDwithMessage:@"暂无匹配的商品"];
                }
                else
                {
                    ChoosePackageVC *choosePackageVC = [[ChoosePackageVC alloc] init];
                    choosePackageVC.attributes = [NSDictionary dictionaryWithObjectsAndKeys:[NSString stringWithFormat:@"%d",moduleId],@"moduleId",skuId,@"skuId",self.params[@"productId"],@"productId", nil];
                    [self.navigationController pushViewController:choosePackageVC animated:YES];
                }
            }
            else
            {
                [self ShowProgressHUDwithMessage:@"请先选择商品属性"];
            }
        }
        else if ([propertyName isEqualToString:@"号码"])
        {
            chooseNumVc = [[ChooseNumVC alloc] init];
            __weak ProductDetailVC *weakSelf = self;
            chooseNumVc.block = ^(NSString *number)
            {
                PropertyCell *cell = (PropertyCell *)[weakSelf.dataTable cellForRowAtIndexPath:indexPath];
                cell.detailTextLabel.text = number;
                cell.detailTextLabel.textColor = [UIColor blueColor];
            };
            [self.navigationController pushViewController:chooseNumVc animated:YES];
        }
        else if ([propertyName isEqualToString:@"地址和套餐"])
        {
            
        }
        else if ([propertyName isEqualToString:@"套餐"])
        {
            [(PropertyCell *)[tableView cellForRowAtIndexPath:indexPath] setUserInteractionEnabled:NO];
            NSMutableArray *array = [NSMutableArray arrayWithCapacity:packageTypeList.count];
            for (int i=0; i<packageTypeList.count;i++)
            {
                NSDictionary *dict = packageTypeList[i];
                DataDictionary_back_cart_item *item = [[DataDictionary_back_cart_item alloc] init];
                item.ITEM_NAME = [NSString stringWithFormat:@"%@,通话%@，流量%@",dict[@"packageName"],dict[@"packageInlandVoice"],dict[@"packageInlandFlow"]];

                [array addObject:item];
            }
            ZSYCommonPickerView *packageTypePickerView = [[ZSYCommonPickerView alloc] initWithTitle:@"套餐"
                                                                                      includeAll:NO
                                                                                      dataSource:array
                                                                               selectedIndexPath:0
                                                                                        Firstrow:nil
                                                                               cancelButtonBlock:^{
                                                                                   [(PropertyCell *)[tableView cellForRowAtIndexPath:indexPath] setUserInteractionEnabled:YES];
                                                                               }
                                                                             makeSureButtonBlock:^(NSInteger index) {
                                                                                 PropertyCell *cell = (PropertyCell *)[self.dataTable cellForRowAtIndexPath:indexPath];
                                                                                 cell.detailTextLabel.textColor = [UIColor blueColor];
                                                                                 cell.detailTextLabel.text = [[array[index] ITEM_NAME] substringToIndex:7];
                                                                                 cell.userInteractionEnabled = YES;
                                                                             }];
            [packageTypePickerView show];

        }
        else if ([propertyName isEqualToString:@"方式"])
        {
        }
        else if ([propertyName isEqualToString:@"手机串号"])
        {
        }
        else
        {
            [(PropertyCell *)[tableView cellForRowAtIndexPath:indexPath] setUserInteractionEnabled:NO];
            //取出对应属性字典
            NSDictionary *propertyDict = propertyDictList[indexPath.row];
            //取出属性名称
            NSString *propertyName = propertyDict[@"propertyName"];
            //取出属性值数组
            NSArray *propertyValueList = propertyDict[@"propertyValueList"];
            
            NSMutableArray *array = [NSMutableArray arrayWithCapacity:propertyValueList.count];
            for (NSDictionary *dict in propertyValueList)
            {
                DataDictionary_back_cart_item *item = [[DataDictionary_back_cart_item alloc] init];
                item.ITEM_NAME = dict[@"propertyValue"];
                item.ITEM_CODE = dict[@"propertyValueId"];
                [array addObject:item];
            }
            
            ZSYCommonPickerView *propertyPickerView = [[ZSYCommonPickerView alloc] initWithTitle:propertyName
                                                                                      includeAll:NO
                                                                                      dataSource:array
                                                                               selectedIndexPath:0
                                                                                        Firstrow:nil
                                                                               cancelButtonBlock:^{
                                                                                   [(PropertyCell *)[tableView cellForRowAtIndexPath:indexPath] setUserInteractionEnabled:YES];
                                                                               }
                                                                             makeSureButtonBlock:^(NSInteger index) {
                                                                                 PropertyCell *cell = (PropertyCell *)[self.dataTable cellForRowAtIndexPath:indexPath];
                                                                                 cell.detailTextLabel.textColor = [UIColor blueColor];
                                                                                 cell.detailTextLabel.text = [array[index] ITEM_NAME];
                                                                                 cell.userInteractionEnabled = YES;
                                                                                 [self.selectedPropetryDict setValue:[array[index] ITEM_CODE] forKeyPath:propertyName];
                                                                             }];
            [propertyPickerView show];
        }
    }
    //评论
    else if (indexPath.section == 2)
    {
        ProductEvaluationVC *productEvaluationVC = [[ProductEvaluationVC alloc] init];
        productEvaluationVC.evaluateDict = evaluateInfo[0];
        productEvaluationVC.productId = self.params[@"productId"];
        [self.navigationController pushViewController:productEvaluationVC animated:YES];
    }
}


//根据属性获得skuId
- (NSString *)makeSureSkuIdByPropetrys:(NSArray *)propetrys
{
    NSMutableArray *selectedProducts = [NSMutableArray array];
    //遍历属性
    for (int a= 0;a <propetrys.count;a++)
    {
        NSString *propetry = propetrys[a];
        //遍历所有单品
        for(int i = 0;i <_skuList.count;i++)
        {
            NSDictionary *product = _skuList[i];
            //获得单品属性列表
            NSArray *propertyList = product[@"propertyList"];
            //遍历所有属性
            for(int b = 0;b < propertyList.count;b++)
            {
                NSDictionary *propertyDict = propertyList[b];
                //如果属性匹配
                if ([propetry isEqualToString:propertyDict[@"propertyId"]])
                {
                    [selectedProducts addObject:product];
                    break;
                }
            }
        }
        [_skuList removeAllObjects];
        [_skuList addObjectsFromArray:selectedProducts];
        [selectedProducts removeAllObjects];
    }
    if (_skuList.count == 1) {
        return _skuList[0][@"skuId"];
    }
    else
    return @"";
}

- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section
{
    if (0 == section)
    {
        if (gifts != nil && gifts.count >0)
        {
            if (headerView == nil)
            {
                headerView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, PHONE_WIDTH, 44)];
                headerView.backgroundColor = [UIColor whiteColor];
                
                UILabel *lable = [[UILabel alloc] initWithFrame:CGRectMake(15, 10, 100, 30)];
                lable.text = @"赠品";
                lable.tintColor = [ComponentsFactory createColorByHex:@"#000000"];
                [headerView addSubview:lable];
                UIButton *button = [UIButton buttonWithType:UIButtonTypeCustom];
                button.frame = headerView.frame;
                [button addTarget:self action:@selector(showDataCell:) forControlEvents:UIControlEventTouchUpInside];
                headImgView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"btn_content_up_n.png"]];
                headImgView.frame = CGRectMake(290, 20, 13, 8);
                [headerView addSubview:headImgView];
                [headerView addSubview:button];
            }
            headImgView.image = [UIImage imageNamed:isShow?@"btn_content_up_n.png":@"btn_content_down_n.png"];
            return headerView;
        }
        else
        return nil;
    }
    else
    return nil;
}
- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section
{
    if (section == 0)
    {
        if (gifts == nil||gifts.count == 0)
        return 0;
        else
        return 44;
    }
    else if (section == 1)
    {
        if (propertyDictList == nil ||propertyDictList.count == 0)
        return 0;
        else
        return 5;
    }
    else if (section == 2)
    {
        if (evaluateInfo == nil ||evaluateInfo.count == 0)
        return 0;
        else
        return 5;
    }
    return 0;
}

//赠品收缩
- (void)showDataCell:(UIButton *)sender
{
    isShow = !isShow;
    [self.dataTable reloadSections:[NSIndexSet indexSetWithIndex:0] withRowAnimation:UITableViewRowAnimationMiddle];
}

#pragma mark - MayYouLikeViewDelegate
- (void)mayYouLikeView:(MayYouLikeView *)mayYouLikeView didSelectWithClickUrl:(NSString *)clickUrl
{
    [UrlParser gotoNewVCWithUrl:clickUrl];
}

#pragma mark - TitleBarDelegate
-(void)backAction
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)homeAction
{
    [self.navigationController popToRootViewControllerAnimated:YES];
}

#pragma mark - HTTPBackDelegate
- (void)requestDidFinished:(NSDictionary*)info
{
    NSString* oKCode = @"0000";
    NSString* bizCode = [info objectForKey:@"bussineCode"];
    NSString* errCode = [info objectForKey:@"errorCode"];
    NSString* msg = [info objectForKey:@"MSG"];
    [MBProgressHUD hideHUDForView:[AppDelegate shareMyApplication].window animated:YES];
    if([[ProductDetail getBizCode] isEqualToString:bizCode])
    {
        if([oKCode isEqualToString:errCode])
        {
            bussineDataService *bus=[bussineDataService sharedDataService];
            NSDictionary *rspDict = bus.rspInfo;
            if (rspDict[@"productDetail"] != [NSNull null])
            {
                //设置图片
                if (rspDict[@"productDetail"][@"imgURL"]!= [NSNull null])
                {
                    NSString *imgURL = rspDict[@"productDetail"][@"imgURL"];
                    //异步加载图片
                    if (hasCachedImage([NSURL URLWithString:imgURL]))
                    {
                        [_productImgView setImage:[UIImage imageWithContentsOfFile:pathForURL([NSURL URLWithString:imgURL])]];
                    }else
                    {
                        NSDictionary *dic=[NSDictionary dictionaryWithObjectsAndKeys:imgURL,@"url",_productImgView,@"imageView",nil];
                        [ComponentsFactory dispatch_process_with_thread:^{
                            UIImage* ima = [self LoadImage:dic];
                            return ima;
                        } result:^(UIImage *ima)
                         {
                             [_productImgView setImage:ima];
                         }];
                    }
                }
                
                if (rspDict[@"productDetail"][@"allDetailUrl"] != [NSNull null])
                {
                    //图文详情地址
                    self.allDetailUrl = rspDict[@"productDetail"][@"allDetailUrl"];
                }
                if (rspDict[@"productDetail"][@"desc"] != [NSNull null])
                {
                    //设置描述信息
                    self.descLable.text = rspDict[@"productDetail"][@"desc"];
                }
                if (rspDict[@"productDetail"][@"sailPrice"]!= [NSNull null])
                {
                    //设置售价
                    self.sailPriceLable.text = [NSString stringWithFormat:@"售价:¥%@元",rspDict[@"productDetail"][@"sailPrice"]];
                }
                if (rspDict[@"productDetail"][@"discountPrice"]!= [NSNull null])
                {
                    //设置折扣价
                    self.discountPrice.text = [NSString stringWithFormat:@"折扣价:¥%@元",rspDict[@"productDetail"][@"discountPrice"]];
                }
                if (rspDict[@"productDetail"][@"totalInventory"]!= [NSNull null])
                {
                    //设置库存数量提示
                    int totalInventory = [rspDict[@"productDetail"][@"totalInventory"] intValue];
                    if (totalInventory > 10)
                    {
                        self.ifHaveView.image = [UIImage imageNamed: @"lable_content_sku_y"];
                        submitBtn.enabled = YES;
                    }
                    else if(totalInventory <= 10 && totalInventory > 0)
                    {
                        self.ifHaveView.image = [UIImage imageNamed: @"lable_content_sku_s"];
                        submitBtn.enabled = YES;
                    }
                    else if(totalInventory <= 0)
                    {
                        self.ifHaveView.image = [UIImage imageNamed: @"lable_content_sku_w"];
                        [self ShowProgressHUDwithMessage:@"该商品暂时缺货"];
                        submitBtn.enabled = NO;
                    }
                }
                if ([rspDict[@"productDetail"][@"gifts"] count] >0)
                {
                    //设置赠品信息
                    gifts = rspDict[@"productDetail"][@"gifts"];
                    if (gifts.count == 1 && [gifts[0][@"giftDetail"] isEqualToString:@""])
                    {
                        gifts = nil;
                    }
                }
                //获取moduleId
                if (rspDict[@"moduleId"] != [NSNull null])
                {
                    moduleId = [rspDict[@"moduleId"] intValue];
                }
                //根据商品类型读取不同数据
                if (rspDict[@"phoneDetail"] != [NSNull null])
                {
                    propertyDictList = rspDict[@"phoneDetail"][@"propertyList"];
                    switch (moduleId)
                    {
                        //合约
                        case DetailTypeContract:
                        {
                            //获取SkuList
                            _skuList = rspDict[@"phoneDetail"][@"skuList"];
                            NSArray *array = [NSArray arrayWithObjects:@{@"propertyName":@"合约"},@{@"propertyName":@"号码"}, nil];
                            [propertyDictList addObjectsFromArray:array];
                            break;
                        }
                        //手机
                        case DetailTypePhone:
                        {
                            NSArray *array = [NSArray arrayWithObjects:@{@"propertyName":@"方式"}, nil];
                            [propertyDictList addObjectsFromArray:array];
                            break;
                        }
                        default:
                        break;
                    }
                }
                else if(rspDict[@"simDetail"]!= [NSNull null])
                {
                    propertyDictList = rspDict[@"simDetail"][@"propertyList"];
                    if (propertyDictList == nil)
                    {
                        propertyDictList = [NSMutableArray array];
                    }
                    NSArray *array = [NSArray arrayWithObjects:@{@"propertyName":@"套餐"},@{@"propertyName":@"号码"},@{@"propertyName":@"手机串号"}, nil];
                    [propertyDictList addObjectsFromArray:array];
                    packageTypeList = rspDict[@"simDetail"][@"bsuiPkg"][@"packageType"];
                }
                else if(rspDict[@"netDetail"]!= [NSNull null])
                {
                    propertyDictList = rspDict[@"netDetail"][@"propertyList"];
                    if (propertyDictList == nil)
                    {
                        propertyDictList = [NSMutableArray array];
                    }
                    [propertyDictList addObject:@{@"propertyName":@"地址和套餐"}];
                }
                if (rspDict[@"productDetail"][@"evaluateResult"]!= [NSNull null])
                {
                    //商品评价
                    evaluateInfo = [NSMutableArray arrayWithObject:rspDict[@"productDetail"][@"evaluateResult"]];
                }
                //猜你喜欢
                NSArray *mayYouLikeData = rspDict[@"productDetail"][@"maybeYourLiker"];
                if (mayYouLikeData != nil && mayYouLikeData.count >0)
                {
                    //添加推荐商品
                    [self.mayYouLikeContentView setContentSize:CGSizeMake(100 *mayYouLikeData.count, 0)];
                    for (int i = 0; i < mayYouLikeData.count; i ++)
                    {
                        _mayYouLikeContentView.hidden = NO;
                        MayYouLikeView *mayYouLikeView = [[MayYouLikeView alloc] initWithFrame:CGRectMake(0 + 100 *i,0, 100, 100)];
                        mayYouLikeView.delegate = self;
                        mayYouLikeView.dataDict = mayYouLikeData[i];
                        [_mayYouLikeContentView addSubview:mayYouLikeView];
                    }
                }
                else
                {
                    _mayYouLikeContentView.hidden = YES;
                    [_mayYouLikeContentView removeFromSuperview];
                    [self.mayYouLikeLabel removeFromSuperview];
                    
                    [UIView animateWithDuration:0.3f animations:^{
                        self.checkDetailBtn.transform = CGAffineTransformMakeTranslation(0, -135);
                    }];
                }
                //刷新表格
                [self.dataTable reloadData];
                [self.dataTable setFrame:(CGRect){{self.dataTable.frame.origin.x, self.dataTable.frame.origin.y},self.dataTable.contentSize}];
            }
        }
        else
        {
            if([NSNull null] == [info objectForKey:@"MSG"] || nil == msg)
            {
                msg = @"获取商品详情失败！";
            }
            [self ShowProgressHUDwithMessage:msg];
        }
    }
}
- (void)requestFailed:(NSDictionary*)info
{
    NSString* bizCode = [info objectForKey:@"bussineCode"];
    NSString* msg = [info objectForKey:@"MSG"];;
    [MBProgressHUD hideHUDForView:[AppDelegate shareMyApplication].window animated:YES];
    
    if([[ProductDetail getBizCode] isEqualToString:bizCode])
    {
        if([NSNull null] == [info objectForKey:@"MSG"] || nil == msg)
        {
            msg = @"获取商品详情失败！";
        }
        [self ShowProgressHUDwithMessage:msg];
    }
}

#pragma mark - 按钮事件
//查看图文详情
- (void)checkProductDetail
{
    WebProductDetailVC *webProductDetailVC = [[WebProductDetailVC alloc] init];
    webProductDetailVC.productDetailUrl = self.allDetailUrl;
    [self.navigationController pushViewController:webProductDetailVC animated:YES];
}

//分享
- (void)share:(UIButton *)sender
{
    NSLog(@"share");
}

//立即购买
- (void)BuyProduct
{
    NSLog(@"立即购买");
}

#pragma mark - 异步图片
- (UIImage *)LoadImage:(NSDictionary*)aDic{
    UIView* view = [aDic objectForKey:@"imageView"];
    NSURL *aURL=[NSURL URLWithString:[aDic objectForKey:@"url"]];
    NSFileManager *fileManager=[NSFileManager defaultManager];
    NSData *data=[NSData dataWithContentsOfURL:aURL] ;
    UIImage *image=[UIImage imageWithData:data];
    if (image==nil) {
        return [UIImage imageNamed:@"loadpicture.png"];
    }
    CGSize origImageSize= [image size];
    CGRect newRect;
    newRect.origin= CGPointZero;
    //拉伸到多大
    newRect.size.width=view.frame.size.width *2;
    newRect.size.height=view.frame.size.height*2;
    //缩放倍数
    float ratio = MIN(newRect.size.width/origImageSize.width, newRect.size.height/origImageSize.height);
    UIGraphicsBeginImageContext(newRect.size);
    CGRect projectRect;
    projectRect.size.width =ratio * origImageSize.width;
    projectRect.size.height=ratio * origImageSize.height;
    projectRect.origin.x= (newRect.size.width -projectRect.size.width)/2.0;
    projectRect.origin.y= (newRect.size.height-projectRect.size.height)/2.0;
    [image drawInRect:projectRect];
    UIImage *small = UIGraphicsGetImageFromCurrentImageContext();
    //压缩比例
    NSData *smallData=UIImageJPEGRepresentation(small, 1);
    if (smallData) {
        [fileManager createFileAtPath:pathForURL(aURL) contents:smallData attributes:nil];
    }
    
    UIGraphicsEndImageContext();
    return small;
}

#pragma mark - HUD
- (void)ShowProgressHUDwithMessage:(NSString *)msg
{
    MBProgressHUD *hud = [MBProgressHUD showHUDAddedTo:[UIApplication sharedApplication].keyWindow animated:YES];
    hud.mode = MBProgressHUDModeText;
    hud.labelText = msg;
    hud.dimBackground = NO;
    hud.removeFromSuperViewOnHide = YES;
    [hud hide:YES afterDelay:1];
}

@end
