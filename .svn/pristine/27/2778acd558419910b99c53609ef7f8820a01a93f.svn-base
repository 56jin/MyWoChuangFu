#import "ProductsVC.h"
#import "ProductCell.h"
#import "ProductModel.h"
#import "MJRefresh.h"
#import "bussiness/bussineDataService.h"
#import "ProductDetailVC.h"
#import "AppDelegate.h"
#import "TitleBar.h"

#define PAGE_COUNT @"20"      //每页多少数据
#define COUNTVIEW_HEIGHT 38   //数量标签视图高度 eg.(总共28件商品）
#define NAVBAR_HEIGHT 64      //导航栏高度
#define PHONE_CONTENT_HEIGHT [AppDelegate sharePhoneContentHeight] //屏幕高度除去手机工具栏高度
#define PHONE_WIDTH [AppDelegate sharePhoneWidth] //手机宽度
#define PHONE_HEIGHT [AppDelegate sharePhoneHeight] //手机高度
#define RGBCOLOR(r,g,b,a) [UIColor colorWithRed:r/255.0 green:g/255.0 blue:b/255.0 alpha:a] //RGB颜色
#define TOPBUTTONWIDTH 34 //回到顶部button宽度
#define TOPBUTTONHEIGHT 34 //回到顶部button高度

static NSString *identifier = @"CustomCell";
@interface ProductsVC ()<UITableViewDataSource,UITableViewDelegate,HttpBackDelegate,TitleBarDelegate>

@property (nonatomic,retain) NSMutableArray *dataSources;           //数据源
@property (nonatomic,assign) UILabel *countlable;                   //数量标签 eg.(总共28件商品)
@property (nonatomic,assign) UITableView *myTableView;
@property (nonatomic,assign) int pageIndex;                         //当前页
@property (nonatomic,assign) NSMutableDictionary *requestDict;      //请求参数字典
@end

@implementation ProductsVC
- (void)viewDidLoad
{
    
    [super viewDidLoad];
    self.pageIndex = 1;
    
    /*
     *
     *
     *
     */
    self.params  = [NSMutableDictionary dictionaryWithObjectsAndKeys:@"1001",@"moduleId",@"1001",@"developerId",@"initSearch",@"requestType", nil];
    [self layoutViews];
    
    bussineDataService *bus=[bussineDataService sharedDataService];
    bus.target=self;
    _requestDict = [NSMutableDictionary dictionaryWithObjectsAndKeys:
                    @"",@"filter",
                    @"",@"searchKey",
                    self.params[@"moduleId"]== [NSNull null]?@"1":self.params[@"moduleId"],@"moduleId",
                    self.params[@"developerId"]== [NSNull null]?@"1":self.params[@"developerId"],@"developerId",
                    self.params[@"requestType"]== [NSNull null]?@"":self.params[@"requestType"],@"requestType",
                    @"2",@"sortType",
                    @"1",@"pageIndex",
                    PAGE_COUNT,@"pageCount",
                    @"1",@"needType",
                    @"",@"speciseId",nil];
    [bus getProducts:_requestDict];
}

- (void)dealloc
{
    [_dataSources release];
    [self setDataSources:nil];
    [_countlable release];
    [self setCountlable:nil];
    [_myTableView release];
    [self setMyTableView:nil];
    [_params release];
    [self setParams:nil];
    [_requestDict release];
    [self setRequestDict:nil];
    [super dealloc];
}

//布局界面
- (void)layoutViews
{
    if (IOS7)
    {
        self.edgesForExtendedLayout = UIRectEdgeNone;
    }
    TitleBar *titleBar = [[TitleBar alloc] initWithFramShowHome:YES ShowSearch:YES TitlePos:middle_position];
    titleBar.title = @"商品查询";
    [self.view addSubview:titleBar];
    [titleBar release];
    
    //结果数量视图
    UIView *countView = [[UIView alloc] initWithFrame:CGRectMake(0, NAVBAR_HEIGHT, PHONE_WIDTH, COUNTVIEW_HEIGHT)];
    countView.backgroundColor = RGBCOLOR(249, 248, 245,1);
    [self.view addSubview:countView];
    
    //结果数量标签
    UILabel *countLable = [[UILabel alloc] init];
    countLable.text = @"总共0件商品";
    countLable.font = [UIFont systemFontOfSize:14.0f];
#ifdef __IPHONE_6_0
    countLable.textAlignment = NSTextAlignmentCenter;
#else
    countLable.textAlignment = UITextAlignmentCenter;
#endif
    countLable.frame = countView.bounds;
    self.countlable = countLable;
#ifdef __IPHONE_6_0
    _countlable.textAlignment = NSTextAlignmentCenter;
#else
    _countlable.textAlignment = UITextAlignmentCenter;
#endif
    [countView addSubview:countLable];
    [countLable release];
    [countView release];
    
    // 表单视图
    UITableView *tableView = [[UITableView alloc] initWithFrame:CGRectMake(0,COUNTVIEW_HEIGHT + NAVBAR_HEIGHT, PHONE_WIDTH, PHONE_HEIGHT - COUNTVIEW_HEIGHT - NAVBAR_HEIGHT) style:UITableViewStylePlain];
    
    tableView.backgroundColor = RGBCOLOR(235, 236, 241, 1);
    tableView.delegate = self;
    tableView.dataSource = self;
    tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    tableView.showsVerticalScrollIndicator = NO;
    _myTableView = tableView;
    
    // 上拉加载更多(进入刷新状态就会调用self的footerRereshing)
    [tableView addFooterWithTarget:self action:@selector(footerRereshing)];
    
    //注册Cell
    [tableView registerClass:[ProductCell class] forCellReuseIdentifier:identifier];
    [self.view addSubview:tableView];
    [tableView release];
    
    UIButton *topBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [topBtn setImage:[UIImage imageNamed:@"btn_list_top_n"] forState:UIControlStateNormal];
    [topBtn setImage:[UIImage imageNamed:@"btn_list_top_p"] forState:UIControlStateHighlighted];
    [topBtn addTarget:self action:@selector(scrollToTop) forControlEvents:UIControlEventTouchUpInside];
    [topBtn setFrame:CGRectMake(PHONE_WIDTH - TOPBUTTONWIDTH - 25, PHONE_HEIGHT - 100, TOPBUTTONWIDTH,TOPBUTTONHEIGHT)];
    [self.view addSubview:topBtn];
}

//滚动到表单顶部
- (void)scrollToTop
{
    //方法1
    //[_myTableView scrollToRowAtIndexPath:[NSIndexPath indexPathForRow:0 inSection:0] atScrollPosition:UITableViewScrollPositionTop animated:YES];
    //方法2
    [_myTableView scrollRectToVisible:CGRectMake(0, 0, 1, 1) animated:YES];
}

//上拉刷新时调用
- (void)footerRereshing
{
    // 2.2秒后刷新表格UI
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2.0 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        bussineDataService *bus=[bussineDataService sharedDataService];
        [self.requestDict setObject:[NSString stringWithFormat:@"%d",_pageIndex] forKey:@"pageIndex"];
        [bus getProducts:self.requestDict];
    });
}

#pragma mark - dataSources
- (NSMutableArray *)dataSources
{
    if (nil == _dataSources)
    {
        _dataSources = [[NSMutableArray alloc] init];
    }
    return _dataSources;
}

#pragma mark - UITableViewDataSource
//返回分组里单元行的数量
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section
{
    return self.dataSources.count;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath
{
    ProductCell *cell = [tableView dequeueReusableCellWithIdentifier:identifier forIndexPath:indexPath];
    cell.product = self.dataSources[indexPath.row];
    return cell;
}

#pragma mark - UITableViewDelegate
/**
 *选中时跳到商品详细界面
 */
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
    ProductDetailVC *productDetailVC = [[ProductDetailVC alloc] init];
    [self.navigationController pushViewController:productDetailVC animated:YES];
}

//返回行高
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath
{
    return 90.0;
}

#pragma mark - HttpBackDelegate
- (void)requestDidFinished:(NSDictionary*)info
{
    NSString* oKCode = @"0000";
    NSString* bizCode = [info objectForKey:@"bussineCode"];
    NSString* errCode = [info objectForKey:@"errorCode"];
    //NSString* msg = [info objectForKey:@"MSG"];
    [MBProgressHUD hideHUDForView:[AppDelegate shareMyApplication].window animated:YES];
    if ([[ProductsMessage getBizCode] isEqualToString:bizCode])
    {
        if ([oKCode isEqualToString:errCode])
        {
            bussineDataService *bus=[bussineDataService sharedDataService];
            NSArray *dataList = bus.rspInfo[@"dataList"];
            for (NSDictionary *dict in dataList)
            {
                ProductModel *item = [[ProductModel alloc] init];
                item.ID = dict[@"productId"];
                item.name = dict[@"name"];
                item.imgURL = dict[@"imgURL"];
                item.desc = dict[@"desc"] == [NSNull null]?@"":dict[@"desc"];
                item.sellCount = dict[@"sellCount"];
                item.sailPrice = dict[@"sailPrice"];
                item.discountPrice = dict[@"discountPrice"];
                item.contractPrice = dict[@"contractPrice"];
                item.clickURL = dict[@"clickUrl"];
                [self.dataSources addObject:item];
                [item release];
            }
            
            //更新页码
            self.pageIndex ++;
            [self.requestDict setObject:[NSString stringWithFormat:@"%d",self.pageIndex] forKey:@"pageIndex"];
            
            //刷新表格
            [self.myTableView reloadData];
            
            //调用endRefreshing结束刷新状态
            [self.myTableView footerEndRefreshing];
            self.countlable.text = [NSString stringWithFormat:@"总共%d件商品",self.dataSources.count];
            
        }
    }
}

- (void)requestFailed:(NSDictionary*)info
{
    //调用endRefreshing结束刷新状态
    [self.myTableView footerEndRefreshing];
}
- (void)cancelTimeOutAndLinkError
{
    //调用endRefreshing结束刷新状态
    [self.myTableView footerEndRefreshing];
}

#pragma
#pragma TitleBarDelegate
-(void)backAction
{
    [self.navigationController popViewControllerAnimated:YES];
}

-(void)homeAction
{
    [self.navigationController popToRootViewControllerAnimated:YES];
}

@end